""" Advent of Code 2024
    Day 14: Restroom Redoubt
    Author: Chi-Kit Pao
    julia --optimize=3 Day14.jl
"""

mutable struct Robot
    pos::Tuple{Int64,Int64}
    velocity::Tuple{Int64,Int64}
end

function parse_input(file_name::String)::Vector{Robot}
    robots = Vector{Robot}()
    for line ∈ eachline(file_name)
        # Example input:
        # p=69,11 v=-25,6
        m = match(r"p=(?<posx>-?\d+)\,(?<posy>-?\d+) v=(?<velox>-?\d+)\,(?<veloy>-?\d+)", line)
        push!(robots, Robot((parse(Int64, m[:posx]), parse(Int64, m[:posy])), (parse(Int64, m[:velox]), parse(Int64, m[:veloy]))))
    end
    return robots
end

function do_steps(robot::Robot, width::Int64, height::Int64, steps::Int64, update::Bool)::Tuple{Int64,Int64}
    x = (robot.pos[1] + steps * robot.velocity[1]) % width
    if x < 0
        x += width
    end
    y = (robot.pos[2] + steps * robot.velocity[2]) % height
    if y < 0
        y += height
    end
    if update
        robot.pos = (x, y)
    end
    return (x, y)
end

function get_quadrant(pos::Tuple{Int64,Int64}, width::Int64, height::Int64)
    (hx, m) = divrem(width, 2)
    @assert m == 1
    (hy, m) = divrem(height, 2)
    @assert m == 1
    if pos[1] == hx || pos[2] == hy
        return 0
    end
    if pos[1] < hx
        if pos[2] < hy
            return 1
        else
            return 4
        end
    else
        if pos[2] < hy
            return 2
        else
            return 3
        end
    end
end

function part1(robots::Vector{Robot}, width::Int64, height::Int64)::Int64
    count = zeros(Int64, 4)
    
    for robot ∈ robots
        pos = do_steps(robot, width, height, 100, false)
        quadrant = get_quadrant(pos, width, height)
        if quadrant != 0
            count[quadrant] += 1
        end
    end

    result = 1
    for c ∈ count
        result *= c
    end
    return result
end

function print_map(map_::Matrix{Bool})
    for i ∈ axes(map_, 1)
        line = [v ? '#' : '.' for v ∈ map_[i:i, :]] 
        println(join(line))
    end
end

function part2(robots::Vector{Robot}, width::Int64, height::Int64)
    # REMARK: This is the value of max_index[2] at the end of this function.
    answer = 7338

    scores = zeros(Int64, width*height)
    for i ∈ 1:(width*height)
        # Take one step and plot map
        map_ = zeros(Bool, (height, width))
        for robot ∈ robots
            pos = do_steps(robot, width, height, 1, true)
            map_[(pos[2] + 1), (pos[1] + 1)] = true
        end

        # Get score for neighbor robots
        for robot ∈ robots
            # cardinal directions -> add score of 2 when neighbor is found.
            directions1 = ((-1, 0), (0, 1), (1, 0), (0, -1))
            for direction ∈ directions1
                try
                    if map_[(robot.pos[2] + direction[1] + 1), (robot.pos[1] + direction[2] + 1)]
                        scores[i] += 2
                    end
                catch BoundsError
                end
            end
            # ordinal directions (also called the intercardinal directions) -> add score of 1 when neighbor is found.
            directions2 = ((-1, 1), (1, 1), (1, -1), (-1, -1))
            for direction ∈ directions2
                try
                    if map_[(robot.pos[2] + direction[1] + 1), (robot.pos[1] + direction[2] + 1)]
                        scores[i] += 1
                    end
                catch BoundsError
                end
            end
        end
        if i == answer
            println("step $i:")
            print_map(map_)
        end
    end
    max_index = findmax(scores)
    # max. index: 7338, max. value: 2924
    println("max. index: $(max_index[2]), max. value: $(max_index[1])")
    @assert max_index[2] == answer
    return answer
end

function main()
    robots = parse_input("input.txt")
    width = 101
    height = 103
    println("Question 1: What will the safety factor be after exactly 100 seconds have elapsed?")
    println("Answer: $(part1(robots, width, height))")
    println("Question 2: What is the fewest number of seconds that must elapse for the robots to display the Easter egg?")
    println("Answer: $(part2(robots, width, height))")
end

@time main()

# Question 1: What will the safety factor be after exactly 100 seconds have elapsed?
# Answer: 223020000
# Question 2: What is the fewest number of seconds that must elapse for the robots to display the Easter egg?
# step 7338:
# .....................................................................................................
# .......#.............................................................................................
# ...................#....#.#..........................................................................
# .................................................................................#...................
# ............................................#.........#....#.........................................
# ................................#....................................................................
# ..................#..................................................................................
# ...#.......................................................................#.........................
# ...............................................................#.....................................
# ..................#...................................#............#.................................
# .#..#................................................................................................
# ......................#..............................................................#...............
# ................#..................#.......#...............................#.........................
# ............................................................................#........................
# .............#.....................#.................................................................
# ................................#.....................................................#..............
# .#..................#......#.....................................#...................................
# ...............#................................................#....................................
# ...............#....#................................................................................
# ...............................................................................................#.....
# ......................................................................#..............................
# ......#.............................................................................#.....#..........
# .........................#...........................................................................
# ......#.........................#............................................#.......................
# ..........#...............................................#..........................................
# .....................................................................................................
# .....................................................................................................
# ........................................#.......#...............##.............#.....................
# .....................................................................................................
# ................................................................................................#....
# #.........................................................................................#..........
# ......#..............................#.......#.......................................................
# .....................................................................................................
# .................................................................................#.#.................
# ...............###############################.......................................................
# ...............#.............................#...............#.......................................
# ...............#.............................#.......................................#...............
# ...............#.............................#..........................#............................
# #..............#.............................#.........................................#.............
# ...............#..............#..............#.....................................#............#....
# ...............#.............###.............#.......................................................
# .#.............#............#####............#.......................#.........................#.....
# ...............#...........#######...........#................................................##.....
# ...............#..........#########..........#..............................................#........
# ...............#............#####............#..........#....................#.....................#.
# .............#.#...........#######...........#.......................................................
# ...............#..........#########..........#.......................................................
# ...............#.........###########.........#.......................................................
# ...............#........#############........#.............#.............#.......#...................
# ...............#..........#########..........#...#...................................................
# ...............#.........###########.........#.......................................................
# ......#........#........#############........#.........................................#.............
# ...............#.......###############.......#..............##...................#...............#...
# ...............#......#################......#.................#.....................................
# ...............#........#############........#.......................................................
# ...............#.......###############.......#..........#............................................
# ...............#......#################......#..............#........................................
# ...............#.....###################.....#.......................................................
# ...............#....#####################....#..#....................................................
# ...............#.............###.............#.......................#...............................
# ...............#.............###.............#.......................................................
# .............#.#.............###.............#......#......................#.........................
# .........#.....#.............................#...........................................#...........
# ...............#.............................#......................#......................#.........
# ...............#.............................#..............#........................................
# ...............#.............................#..................................................#....
# ...............###############################.......................................................
# .....................................................................#........#......................
# .....................................................................................................
# .....................................................................................................
# .........................................#...........................................................
# .....................................................................................................
# .............................................................................#.......................
# ...........................#.........................................................................
# ................................................................................#....................
# ....#................................................................................................
# ................................#...............................#....................................
# .....................................................................................................
# ...................#..............#.....#............................................................
# ..............................................................#......................................
# ................................#....................................................................
# ..................................................................#..................................
# .....................................................................................................
# .......................#..........#....................#.............................................
# ........................#..............................#.............................................
# .........................................#...........................................................
# ............................................................................#........................
# ...................................................................#.................................
# ....#......................................................#.........................................
# ...........................................................#...................................#.....
# .................#...............................#.....#.................#...........................
# .....................................................................................................
# .....................................................................................................
# #...#......................................#..........................#..............#...............
# .....................................................................................................
# ...............................................................................................#.....
# ............................................................#........................................
# .....................................#...............................................................
# ...................................................................................................#.
# ................................................#....................................................
# ...........#.........................................................................................
# .....................................................................................................
# .................#.............#.....#...............................................................
# max. index: 7338, max. value: 2924
# Answer: 7338
#   2.255916 seconds (1.87 M allocations: 160.620 MiB, 2.31% gc time, 0.57% compilation time)
# 
